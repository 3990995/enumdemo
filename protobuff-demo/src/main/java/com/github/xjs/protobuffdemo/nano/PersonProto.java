// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.github.xjs.protobuffdemo.nano;

@SuppressWarnings("hiding")
public interface PersonProto {

  public static final class Person extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Person[] _emptyArray;
    public static Person[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Person[0];
          }
        }
      }
      return _emptyArray;
    }

    // string name = 1;
    public java.lang.String name;

    // int32 age = 2;
    public int age;

    public Person() {
      clear();
    }

    public Person clear() {
      name = "";
      age = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.name.equals("")) {
        output.writeString(1, this.name);
      }
      if (this.age != 0) {
        output.writeInt32(2, this.age);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.name.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.name);
      }
      if (this.age != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.age);
      }
      return size;
    }

    @Override
    public Person mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.name = input.readString();
            break;
          }
          case 16: {
            this.age = input.readInt32();
            break;
          }
        }
      }
    }

    public static Person parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Person(), data);
    }

    public static Person parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Person().mergeFrom(input);
    }
  }
}
